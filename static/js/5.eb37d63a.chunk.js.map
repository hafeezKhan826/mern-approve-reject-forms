{"version":3,"sources":["components/auth-component/login.js","components/auth-component/register.js","components/auth-component/auth-wrapper.js"],"names":["Login","props","state","email","password","enableRouter","messages","handleLoginSubmit","bind","handleChange","event","input","target","this","setState","name","value","preventDefault","axios","post","port","then","result","data","status","localStorage","setItem","user","_id","token","message","catch","err","console","log","setTimeout","className","onSubmit","label","icon","group","onChange","type","validate","error","success","autoFocus","color","to","React","Component","Register","isValid","values","Object","every","val","fullName","role","departments","dropdownText","handleRegisterSubmit","setRole","get","formValues","departmentId","confirmPassword","caret","basic","length","map","dept","onClick","key","AuthWrapper","toggle","tab","e","activeItem","handleSubmit","style","width","active","tabId"],"mappings":"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","file":"static/js/5.eb37d63a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\nimport { MDBContainer, MDBRow, MDBBtn, MDBInput } from 'mdbreact';\r\nconst port = 'http://localhost:8000/';\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            enableRouter: false,\r\n            messages: ''\r\n        }\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        let input = event.target;\r\n        this.setState({ [input.name]: input.value });\r\n    }\r\n    handleLoginSubmit(event) {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n        axios\r\n            .post(port + 'auth/login', { email, password })\r\n            .then((result) => {\r\n                if (result.data.status == 'success') {\r\n                    localStorage.setItem('userid', result.data.user._id)\r\n                    localStorage.setItem('token', result.data.token)\r\n                    this.setState({\r\n                        enableRouter: true\r\n                    })\r\n                } else if (result.data.status == 'error') {\r\n                    this.setState({\r\n                        messages: result.data.message\r\n                    })\r\n                }\r\n            }).catch((err) => console.log(err))\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messages: ''\r\n            })\r\n        }, 3000);\r\n\r\n    }\r\n    render() {\r\n        const { email, password, enableRouter, messages } = this.state;\r\n        return (\r\n            <div>\r\n                <MDBContainer className='d-flex justify-content-center'>\r\n                    <MDBRow>\r\n                        <form onSubmit={this.handleLoginSubmit}>\r\n                            <p className=\"h5 text-center mb-4\">Login in</p>\r\n                            <div className=\"grey-text\">\r\n                                <MDBInput\r\n                                    label=\"Your email\"\r\n                                    icon=\"envelope\"\r\n                                    group\r\n                                    onChange={this.handleChange}\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    validate\r\n                                    name='email'\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                    autoFocus={true}\r\n                                />\r\n                                <MDBInput\r\n                                    label=\"Your password\"\r\n                                    icon=\"lock\"\r\n                                    onChange={this.handleChange}\r\n                                    group\r\n                                    value={password}\r\n                                    type=\"password\"\r\n                                    name='password'\r\n                                    validate\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <MDBBtn color=\"primary\" type='submit'>Login</MDBBtn>\r\n                            </div>\r\n                            <h4><b>{messages}</b></h4>\r\n                        </form>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                {enableRouter ?\r\n                    <Redirect to='/department' /> :\r\n                    \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    MDBContainer, MDBRow, MDBBtn, MDBInput, MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle\r\n} from 'mdbreact';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\nconst port = 'http://localhost:8000/';\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            fullName: '',\r\n            role: '',\r\n            email: '',\r\n            departments: [],\r\n            password: '',\r\n            messages: '',\r\n            enableRouter: false,\r\n            dropdownText: 'Select Department'\r\n        }\r\n        this.handleRegisterSubmit = this.handleRegisterSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.isValid = this.isValid.bind(this);\r\n        this.setRole = this.setRole.bind(this);\r\n\r\n    }\r\n    handleChange(event) {\r\n        let input = event.target;\r\n        this.setState({ [input.name]: input.value });\r\n    }\r\n    setRole(role, dropdownText) {\r\n        this.setState({ role, dropdownText })\r\n    }\r\n    componentDidMount() {\r\n        axios.get(port + 'department/all-departments')\r\n            .then((result) => {\r\n                const departments = result.data.departments ? result.data.departments : []\r\n                this.setState({ departments })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    handleRegisterSubmit(event) {\r\n        event.preventDefault();\r\n        const { email, password, role, fullName, confirmPassword } = this.state;\r\n        const formValues = {\r\n            email, password, departmentId: role, fullName, confirmPassword\r\n        };\r\n        if (this.isValid(formValues)) {\r\n            axios.post(port + 'users/add-user', formValues)\r\n                .then((result) => {\r\n                    console.log('Gettting a reponse', result);\r\n                    localStorage.setItem('userid', result.data.user._id)\r\n                    localStorage.setItem('token', result.data.token)\r\n                    this.setState({\r\n                        messages: result.data.message,\r\n                        enableRouter: true\r\n                    })\r\n                })\r\n                .catch((err) => {\r\n                    console.log('Gettting error', err);\r\n                })\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                messages: ''\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    isValid = (values) => Object.values(values).every(val => val !== '')\r\n\r\n    render() {\r\n        const { email, password, fullName, confirmPassword, departments, messages, dropdownText, enableRouter } = this.state;\r\n        return (\r\n            <div>\r\n                {/* <MDBCol>\r\n                    <MDBCard style={{ width: \"22rem\" }}>\r\n                        <MDBCardBody> */}\r\n                <MDBContainer className='d-flex justify-content-center'>\r\n                    <MDBRow>\r\n                        <form onSubmit={this.handleRegisterSubmit}>\r\n                            <p className=\"h5 text-center mb-4\">Sign up</p>\r\n                            <div className=\"grey-text\">\r\n                                <MDBInput\r\n                                    label=\"Your Full Name\"\r\n                                    icon=\"user\"\r\n                                    group\r\n                                    type=\"text\"\r\n                                    validate\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                    name=\"fullName\"\r\n                                    onChange={this.handleChange}\r\n                                    value={fullName}\r\n                                    autoFocus={true}\r\n                                />\r\n                                <MDBInput\r\n                                    label=\"Your email\"\r\n                                    icon=\"envelope\"\r\n                                    group\r\n                                    type=\"email\"\r\n                                    validate\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    value={email}\r\n                                />\r\n                                <MDBInput\r\n                                    label=\"Your password\"\r\n                                    icon=\"lock\"\r\n                                    group\r\n                                    type=\"password\"\r\n                                    validate\r\n                                    name=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={password}\r\n                                />\r\n                                <MDBInput\r\n                                    label=\"Confirm password\"\r\n                                    icon=\"lock\"\r\n                                    group\r\n                                    type=\"password\"\r\n                                    validate\r\n                                    name=\"confirmPassword\"\r\n                                    onChange={this.handleChange}\r\n                                    value={confirmPassword}\r\n                                />\r\n                                <MDBDropdown>\r\n                                    <MDBDropdownToggle caret color=\"primary\">\r\n                                        {dropdownText}\r\n                                    </MDBDropdownToggle>\r\n                                    <MDBDropdownMenu basic>\r\n                                        {departments.length > 0 ?\r\n                                            departments.map((dept) => <MDBDropdownItem onClick={() => this.setRole(dept.departmentId, dept.name)} key={dept._id}>{dept.name}</MDBDropdownItem>) : ''}\r\n                                    </MDBDropdownMenu>\r\n                                </MDBDropdown>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <MDBBtn color=\"primary\" type='submit'>Register</MDBBtn>\r\n                            </div>\r\n                            <h4><b>{messages}</b></h4>\r\n                        </form>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                {enableRouter ?\r\n                    <Redirect to='/department' /> :\r\n                    \"\"}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBContainer, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport 'react-tabs/style/react-tabs.css'\r\nimport Login from './login';\r\nimport Register from './register';\r\n\r\nexport default class AuthWrapper extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeItem: '1'\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggle = tab => e => {\r\n        if (this.state.activeItem !== tab) {\r\n            this.setState({\r\n                activeItem: tab\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { activeItem } = this.state;\r\n        // const classes = useStyles;\r\n        return (\r\n\r\n            <div>\r\n\r\n                <MDBContainer style={{ width: \"60rem\" }}>\r\n                    <div>\r\n                        <MDBNav className=\"nav-tabs mt-5\">\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"#\" active={activeItem === \"1\"} onClick={this.toggle(\"1\")} role=\"tab\" >\r\n                                    Login\r\n                            </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"#\" active={activeItem === \"2\"} onClick={this.toggle(\"2\")} role=\"tab\" >\r\n                                    Register\r\n                        </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNav>\r\n                        <MDBTabContent activeItem={activeItem} >\r\n                            <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n                                <p className=\"mt-2\">\r\n                                    <Login />\r\n                                </p>\r\n                            </MDBTabPane>\r\n                            <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n                                <p className=\"mt-2\">\r\n                                    <Register />\r\n                                </p>\r\n                            </MDBTabPane>\r\n                        </MDBTabContent>\r\n                    </div>\r\n                </MDBContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}